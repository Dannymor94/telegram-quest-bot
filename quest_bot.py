from aiogram import Bot, Dispatcher, executor, types
import logging
import os

logging.basicConfig(level=logging.INFO)

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
BOT_TOKEN = os.getenv("BOT_TOKEN")

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher(bot)

# –°–ø–∏—Å–æ–∫ –∑–∞–≥–∞–¥–æ–∫ –∏ –æ—Ç–≤–µ—Ç–æ–≤
QUESTS = [
    {"question": "–Ø –º—è–≥–∫–∞—è –∏ –ø—É—à–∏—Å—Ç–∞—è. –°–ø–∏—à—å —Ç—ã –Ω–∞ –º–Ω–µ. –ì–¥–µ —è?", "answer": "–ø–æ–¥—É—à–∫–∞"},
    {"question": "–£—Ç—Ä–æ–º —è –ø–æ–∫–∞–∑—ã–≤–∞—é —Ç–≤–æ—ë –ª–∏—Ü–æ. –ì–¥–µ —è?", "answer": "–∑–µ—Ä–∫–∞–ª–æ"},
    {"question": "–¢–∞–º —Ö—Ä–∞–Ω—è—Ç—Å—è –≤–∫—É—Å–Ω—è—à–∫–∏ –∏ —Ö–æ–ª–æ–¥. –ì–¥–µ —è?", "answer": "—Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫"},
    {"question": "–Ø —Ä–∞–∑–æ–≥—Ä–µ–≤–∞—é –µ–¥—É, –Ω–æ –Ω–µ –º–∏–∫—Ä–æ–≤–æ–ª–Ω–æ–≤–∫–∞. –ì–¥–µ —è?", "answer": "–¥—É—Ö–æ–≤–∫–∞"},
    {"question": "–¢–∞–º –∂–∏–≤—É—Ç –∫–Ω–∏–≥–∏. –ì–¥–µ —è?", "answer": "–∫–Ω–∏–∂–Ω–∞—è –ø–æ–ª–∫–∞"},
]

# –°–ª–æ–≤–∞—Ä—å, —á—Ç–æ–±—ã –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
user_progress = {}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message_handler(commands=['start'])
async def start_game(message: types.Message):
    user_id = message.from_user.id
    user_progress[user_id] = 0
    await message.answer("üéâ –ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –∫–≤–µ—Å—Ç –ø–æ –¥–æ–º—É üéÅ\n–û—Ç–≥–∞–¥–∞–π, –≥–¥–µ —Å–ø—Ä—è—Ç–∞–Ω –ø–æ–¥–∞—Ä–æ–∫!\n\n–í–æ—Ç –ø–µ—Ä–≤–∞—è –∑–∞–≥–∞–¥–∫–∞:")
    await message.answer(QUESTS[0]['question'])

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–æ—Ç–≤–µ—Ç–æ–≤)
@dp.message_handler()
async def handle_answer(message: types.Message):
    user_id = message.from_user.id
    progress = user_progress.get(user_id, 0)

    # –ï—Å–ª–∏ –∫–≤–µ—Å—Ç —É–∂–µ –∑–∞–≤–µ—Ä—à—ë–Ω
    if progress >= len(QUESTS):
        await message.answer("üéâ –¢—ã —É–∂–µ –ø—Ä–æ—à—ë–ª –≤–µ—Å—å –∫–≤–µ—Å—Ç! –ü–æ–∏—â–∏ –ø–æ–¥–∞—Ä–æ–∫ —Ç–∞–º, –≥–¥–µ –∂–∏–≤—É—Ç –∫–Ω–∏–≥–∏ üòâ")
        return

    correct_answer = QUESTS[progress]['answer'].lower()
    user_reply = message.text.strip().lower()

    if user_reply == correct_answer:
        progress += 1
        user_progress[user_id] = progress
        if progress < len(QUESTS):
            await message.answer("‚úÖ –í–µ—Ä–Ω–æ! –°–ª–µ–¥—É—é—â–∞—è –∑–∞–≥–∞–¥–∫–∞:")
            await message.answer(QUESTS[progress]['question'])
        else:
            await message.answer("üèÅ –ö–≤–µ—Å—Ç –∑–∞–≤–µ—Ä—à—ë–Ω! –ü–æ–¥–∞—Ä–æ–∫ –∂–¥—ë—Ç —Ç–µ–±—è –Ω–∞ –∫–Ω–∏–∂–Ω–æ–π –ø–æ–ª–∫–µ üìö")
            # –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–µ—Å–Ω–∏ –ø–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—é –∫–≤–µ—Å—Ç–∞
            await message.answer_audio(
                audio="https://limewire.com/d/nZLEH#Ync8SPU5TL",
                title="–û—Å–ª–µ–ø–∏—Ç–µ–ª—å–Ω–æ –º–æ–ª–æ–¥–æ–π",
                performer="–ü–ª–∞–º–µ–Ω–µ–≤, –•–∞–Ω–∞–Ω–∏–Ω, –î–µ–º–∏–¥–æ–≤–∞"
            )
    else:
        await message.answer("‚ùå –•–º... –Ω–µ —Å–æ–≤—Å–µ–º. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑!")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
